{"version":3,"file":"dataform.cjs.production.min.js","sources":["../src/utils/validate.ts","../src/components/layout/tab.tsx","../src/assets/icons/list.tsx","../src/components/element/control-button.tsx","../src/components/layout/accordion.tsx","../src/components/layout/slides.tsx","../src/components/element/switch.tsx","../src/components/element/radio.tsx","../src/components/element/slider-range.tsx","../src/components/layout/card.tsx","../src/components/layout/collapse.tsx","../src/context/store.tsx","../src/components/form/rederer-array.tsx","../src/components/element/checkbox.tsx","../src/components/utils/index.ts","../src/components/element/color.tsx","../src/components/element/select.tsx","../src/components/element/label.tsx","../src/components/element/number.tsx","../src/components/element/input.tsx","../src/components/element/basic-element-list.ts","../src/components/element/basic-element.tsx","../src/assets/icons/emoji-mart-custom.tsx","../src/components/element/icon-picker.tsx","../src/components/form/rederer.tsx","../src/components/utils/resolvers.ts","../src/components/common/notification.tsx","../src/components/form/index.tsx","../src/index.tsx"],"sourcesContent":["export const validate = (formData: any, schema: any) => {\n  const validationErrors: any = {};\n  const properties = schema.properties;\n\n  const checkRequiredIf = (property: any, value: any) => {\n    if (property.requiredIf) {\n      const { field, value: requiredValue } = property.requiredIf;\n      if (formData[field] === requiredValue && !value) {\n        return `This field is required when ${field} is ${requiredValue}.`;\n      }\n    }\n    return null;\n  };\n\n  Object.keys(properties).forEach(key => {\n    const value = formData[key];\n    const prop = properties[key];\n    const validationResult = validateField(key, value, formData, prop);\n\n    if (prop.required && !value) {\n      validationErrors[key] = 'This field is required.';\n    } else {\n      const requiredIfError = checkRequiredIf(prop, value);\n      if (requiredIfError) {\n        validationErrors[key] = requiredIfError;\n      }\n    }\n  });\n\n  return validationErrors;\n};\n\nexport const validateField = (keyPath, value, formData, schema) => {\n  const fieldSchema = getSchemaAtPath(schema, keyPath);\n\n  if (fieldSchema['x-matchField']) {\n    const matchFieldPath = fieldSchema['x-matchField'];\n    const matchFieldValue = getValueAtPath(formData, matchFieldPath);\n\n    if (value !== matchFieldValue) {\n      return `The ${fieldSchema.title} does not match the ${getSchemaAtPath(schema, matchFieldPath).title\n        }`;\n    }\n  }\n\n  // Additional validation rules can be added here\n  return null;\n};\n\n// Helper function to get the schema at the given keyPath\nexport const getSchemaAtPath = (schema, keyPath) => {\n  const pathParts = keyPath.split('.');\n  let currentSchema = schema.properties;\n\n  for (const part of pathParts) {\n    currentSchema = currentSchema[part].properties || currentSchema[part];\n  }\n\n  return currentSchema;\n};\n\n// Helper function to get the value at the given keyPath in formData\nexport const getValueAtPath = (formData, keyPath) => {\n  const pathParts = keyPath.split('.');\n  let currentValue = formData;\n\n  for (const part of pathParts) {\n    currentValue = currentValue?.[part];\n  }\n\n  return currentValue;\n};\n\nexport const validationUtil = (\n  rule: string,\n  value: any,\n  comparisonValue?: any,\n) => {\n  switch (rule) {\n    case 'equals':\n      return value === comparisonValue;\n    case 'notEquals':\n      return value !== comparisonValue;\n    case 'greaterThan':\n      return value > comparisonValue;\n    case 'lessThan':\n      return value < comparisonValue;\n    case 'greaterThanOrEqual':\n      return value >= comparisonValue;\n    case 'lessThanOrEqual':\n      return value <= comparisonValue;\n    case 'includes':\n      return value.includes(comparisonValue);\n    case 'startsWith':\n      return value.startsWith(comparisonValue);\n    case 'endsWith':\n      return value.endsWith(comparisonValue);\n    case 'regex':\n      return new RegExp(comparisonValue).test(value);\n    case 'isEmpty':\n      return !value || (Array.isArray(value) && value.length === 0);\n    case 'isNotEmpty':\n      return value && !(Array.isArray(value) && value.length === 0);\n    default:\n      return false;\n  }\n};\n","import { Transition } from '@headlessui/react';\nimport  React, { SetStateAction, useState } from 'react';\n\nexport const TabLayout = (props: {\n  className?: string;\n  tabs: { title: string; content: any }[];\n}) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const handleTabClick = (\n    e: { preventDefault: () => void },\n    index: SetStateAction<number>,\n  ) => {\n    e.preventDefault();\n    setActiveTab(index);\n  };\n\n  const classes = ' bg-none text-gray-900 p-4 w-full rounded-xl';\n  const getClass = (_index: number) => {\n    if (activeTab === _index) {\n      return classes + ' border-b-2 border-blue-500 bg-[#ffffffee]';\n    }\n    return classes;\n  };\n\n  return (\n    <div\n      className={` ${props.className} w-ful shadow bg-[#00000011] rounded-xl pb-2`}\n    >\n      <div className=\"flex just cursor-pointer w-full rounded-2xl p-2 bg-[#00000011]\">\n        {props.tabs.map((tab, index) => (\n          <div\n            key={index}\n            onClick={e => handleTabClick(e, index)}\n            className={getClass(index)}\n          >\n            {tab.title}\n          </div>\n        ))}\n      </div>\n      <div>\n        {props.tabs.map((tab, index) => (\n          <div key={index}>\n            <Transition\n              show={activeTab === index}\n              enter=\"transition-opacity duration-75\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity duration-150\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <div className=\"mt-4\">{tab.content}</div>\n            </Transition>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport * as iconFa from 'react-icons/fa';\nimport * as iconAi from 'react-icons/ai';\nimport * as iconBs from 'react-icons/bs';\nimport * as iconBi from 'react-icons/bi';\nimport * as iconCi from 'react-icons/ci';\nimport * as iconDi from 'react-icons/di';\nimport * as iconFi from 'react-icons/fi';\nimport * as iconFc from 'react-icons/fc';\nimport * as iconGi from 'react-icons/gi';\nimport * as iconGo from 'react-icons/go';\nimport * as iconGr from 'react-icons/gr';\nimport * as iconHi from 'react-icons/hi';\nimport * as iconHi2 from 'react-icons/hi2';\nimport * as iconIm from 'react-icons/im';\nimport * as iconIo from 'react-icons/io';\nimport * as iconIo5 from 'react-icons/io5';\nimport * as iconMd from 'react-icons/md';\nimport * as iconRx from 'react-icons/rx';\nimport * as iconRi from 'react-icons/ri';\nimport * as iconSi from 'react-icons/si';\nimport * as iconSl from 'react-icons/sl';\nimport * as iconTb from 'react-icons/tb';\nimport * as iconTfi from 'react-icons/tfi';\nimport * as iconTi from 'react-icons/ti';\nimport * as iconVsc from 'react-icons/vsc';\nimport * as iconWi from 'react-icons/wi';\nimport * as iconCg from 'react-icons/cg';\n\nexport const icons = {\n  ...iconFa,\n  ...iconAi,\n  ...iconBs,\n  ...iconBi,\n  ...iconCi,\n  ...iconDi,\n  ...iconFi,\n  ...iconFc,\n  ...iconGi,\n  ...iconGo,\n  ...iconGr,\n  ...iconHi,\n  ...iconHi2,\n  ...iconIm,\n  ...iconIo,\n  ...iconIo5,\n  ...iconMd,\n  ...iconRx,\n  ...iconRi,\n  ...iconSi,\n  ...iconSl,\n  ...iconTb,\n  ...iconTfi,\n  ...iconTi,\n  ...iconVsc,\n  ...iconWi,\n  ...iconCg,\n} as const;\n\nexport type IconKeys = keyof typeof icons;\n\nexport const iconType: Record<IconKeys, IconKeys> = Object.keys(icons).reduce(\n  (acc, key) => {\n    acc[key as IconKeys] = key as IconKeys;\n    return acc;\n  },\n  {} as Record<IconKeys, IconKeys>,\n);\n\nexport const Icon = (props: {\n  name: IconKeys;\n  size?: number;\n  color?: string;\n  className?: string;\n}) => {\n  const Icon = icons[props.name];\n  if (!Icon) return null;\n  return (\n    <Icon\n      size={props.size}\n      color={props.color}\n      className={props.className}\n      aria-hidden={true}\n    />\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useClickAway } from 'react-use';\nimport { Icon, IconKeys, iconType } from '../../assets/icons/list';\n\nexport const Button = (props: {\n  id?: string;\n  icon?: IconKeys;\n  color?: string;\n  size?: number;\n  label: string;\n  clickHandler?: any;\n  className?: string;\n}) => {\n  const clickHandler = () => {\n    if (props.clickHandler) {\n      props.clickHandler(props.id);\n    }\n  };\n  return (\n    <button className={`${props?.className}`} onClick={clickHandler}>\n      {props.icon && (\n        <Icon name={props.icon} color={props.color} size={props.size} />\n      )}\n      {props.label}\n    </button>\n  );\n};\n\nexport const ButtonWithConfirm = (props: {\n  id?: string;\n  icon?: IconKeys;\n  color?: string;\n  size?: number;\n  label: string;\n  clickHandler?: any;\n  className?: string;\n}) => {\n  const [confirm, setConfirm] = useState(false);\n  const ref = useRef(null);\n\n  useClickAway(ref, () => {\n    setConfirm(false);\n  });\n\n  const clickHandler = () => {\n    if (confirm) {\n      props.clickHandler(props.id);\n      setConfirm(false);\n    } else {\n      setConfirm(true);\n    }\n  };\n\n  const getIconName = () => {\n    if (confirm) {\n      return <Icon name={iconType.BiCheck} color={props.color} size={props.size} /> //;\n    } else if(props.icon){\n      return <Icon name={props.icon} color={props.color} size={props.size} /> //;\n    }\n    return null\n  };\n  return (\n    <button ref={ref} className={`${props?.className}`} onClick={clickHandler}>\n      {getIconName()}\n      {props.label}\n    </button>\n  );\n};\n\nexport const ButtonAdd = (props: {\n  id?: string;\n  color?: string;\n  size?: number;\n  clickHandler?: any;\n  className?: string;\n}) => {\n  return (\n    <Button\n      icon={iconType.BiPlus}\n      size={18}\n      color={'#333'}\n      {...props}\n      label={''}\n      className=\"p-1 px-4 bg-white rounded-lg shadow-md text-center\"\n    />\n  );\n};\n\nexport const ButtonDelete = (props: {\n  id?: string;\n  color?: string;\n  size?: number;\n  clickHandler?: any;\n  className?: string;\n}) => {\n  return (\n    <ButtonWithConfirm\n      icon={iconType.MdOutlineDeleteForever}\n      size={18}\n      color={'#ff0000'}\n      {...props}\n      label={''}\n      className=\"p-1 px-4 bg-white rounded-lg shadow-md text-center\"\n    />\n  );\n};\n\nexport const ButtonOk = (props: {\n  id?: string;\n  color?: string;\n  size?: number;\n  clickHandler?: any;\n  className?: string;\n}) => {\n  return (\n    <Button\n      icon={iconType.BiCheck}\n      size={15}\n      color={'#00ff00'}\n      {...props}\n      label={'Accept'}\n    />\n  );\n};\n\nexport const ButtonCancel = (props: {\n  id?: string;\n  color?: string;\n  size?: number;\n  clickHandler?: any;\n  className?: string;\n}) => {\n  return (\n    <Button\n      icon={iconType.BiCheck}\n      size={15}\n      color={'#333'}\n      {...props}\n      label={'Cancel'}\n    />\n  );\n};\n","import { Transition } from '@headlessui/react';\nimport  React,{ useState } from 'react';\nimport { ButtonDelete } from '../element/control-button';\n\nexport const AccordionLayout = (props: {\n  className?: string;\n  tabs: { title: string; content: any; deleteHandler?: any }[];\n}) => {\n  const [itemStates, setItemState] = useState<any>({});\n\n  const handleClick = (e: any, _index: number) => {\n    e.preventDefault();\n    setItemState({ ...itemStates, [_index]: !itemStates[_index] });\n  };\n\n  const classes =\n    'flex items-center justify-between text-gray-900 p-4 flex just cursor-pointer w-full rounded-2xl bg-[#00000011]';\n  const getClass = (_index: number) => {\n    if (itemStates[_index]) {\n      return classes + 'cursor-pointer w-full border-b-2 p-4 border-blue-500';\n    }\n    return classes;\n  };\n\n  return (\n    <div\n      className={` ${props.className} w-full shadow  bg-[#00000011] rounded-xl p-2`}\n    >\n      {props.tabs.map((tab, _index) => (\n        <div\n          key={_index}\n          className={_index === props.tabs.length - 1 ? '' : 'mb-4  '}\n        >\n          <div className={getClass(_index)}>\n            <div\n              key={_index}\n              onClick={e => handleClick(e, _index)}\n              className=\"flex-grow\"\n            >\n              {tab.title}\n            </div>\n            <div className=\" w-[20px] mr-[30px]\">\n              {tab.deleteHandler && (\n                <ButtonDelete clickHandler={tab.deleteHandler} />\n              )}\n            </div>\n          </div>\n          <Transition\n            show={itemStates[_index] || false}\n            enter=\"transition-opacity duration-75\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity duration-150\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"mt-4\">{tab.content}</div>\n          </Transition>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import  React,{ useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\n\nexport const SlidesLayout = (props: {\n  tabs: { title: string; content: any }[];\n}) => {\n  const [itemStates, setItemState] = useState<any>({});\n\n  const handleClick = (e: any, _index: number) => {\n    e.preventDefault();\n    setItemState({ ...itemStates, [_index]: !itemStates[_index] });\n  };\n\n  const classes = 'bg-gray-100 text-gray-900 p-4';\n  const getClass = (_index: number) => {\n    if (itemStates[_index]) {\n      return classes + 'border-b-2 border-blue-500';\n    }\n    return classes;\n  };\n\n  return (\n    <div>\n      <Swiper\n        spaceBetween={50}\n        slidesPerView={3}\n        onSlideChange={() => console.log('slide change')}\n        onSwiper={swiper => console.log(swiper)}\n      >\n        {props.tabs.map((tab, _index) => (\n          <SwiperSlide key={_index}>\n            <div\n              key={_index}\n              onClick={e => handleClick(e, _index)}\n              className={getClass(_index)}\n            >\n              {tab.title}\n            </div>\n            <div className=\"mt-4\">{tab.content}</div>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Switch } from '@headlessui/react';\nimport { LayoutCard } from '../layout/card';\n\nexport function SwitchInput() {\n  const [enabled, setEnabled] = useState(false);\n\n  return (\n    <Switch\n      checked={enabled}\n      onChange={setEnabled}\n      className={`${enabled ? 'bg-teal-900' : 'bg-teal-700'}\n          relative inline-flex h-[38px] w-[74px] shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus-visible:ring-2  focus-visible:ring-white focus-visible:ring-opacity-75`}\n    >\n      <span className=\"sr-only\">Use setting</span>\n      <span\n        aria-hidden=\"true\"\n        className={`${enabled ? 'translate-x-9' : 'translate-x-0'}\n            pointer-events-none inline-block h-[34px] w-[34px] transform rounded-full bg-white shadow-lg ring-0 transition duration-200 ease-in-out`}\n      />\n    </Switch>\n  );\n}\n","import React, { useState } from 'react';\nimport { RadioGroup } from '@headlessui/react';\n\nconst plans = [\n  {\n    name: 'Startup',\n    ram: '12GB',\n    cpus: '6 CPUs',\n    disk: '160 GB SSD disk',\n  },\n  {\n    name: 'Business',\n    ram: '16GB',\n    cpus: '8 CPUs',\n    disk: '512 GB SSD disk',\n  },\n  {\n    name: 'Enterprise',\n    ram: '32GB',\n    cpus: '12 CPUs',\n    disk: '1024 GB SSD disk',\n  },\n];\n\nexport function RadioInput(props: { options }) {\n  const [selected, setSelected] = useState(props.options[0]);\n\n  return (\n    <div className=\"\">\n      <div className=\"w-full max-w-md\">\n        <RadioGroup value={selected} onChange={setSelected}>\n          <RadioGroup.Label className=\"sr-only\">Server size</RadioGroup.Label>\n          <div className=\"space-y-2\">\n            {props.options.map(item => (\n              <RadioGroup.Option\n                key={item.value}\n                value={item.label}\n                className={({ active, checked }) =>\n                  `${\n                    active\n                      ? 'ring-2 ring-white ring-opacity-60 ring-offset-2 ring-offset-sky-300'\n                      : ''\n                  }\n                  ${\n                    checked ? 'bg-sky-900 bg-opacity-75 text-white' : 'bg-white'\n                  }\n                    relative flex cursor-pointer rounded-lg px-5 py-4 shadow-md focus:outline-none`\n                }\n              >\n                {({ active, checked }) => (\n                  <>\n                    <div className=\"flex w-full items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <div className=\"text-sm\">\n                          <RadioGroup.Label\n                            as=\"p\"\n                            className={`font-medium  ${\n                              checked ? 'text-white' : 'text-gray-900'\n                            }`}\n                          >\n                            {item.name}\n                          </RadioGroup.Label>\n                          <RadioGroup.Description\n                            as=\"span\"\n                            className={`inline ${\n                              checked ? 'text-sky-100' : 'text-gray-500'\n                            }`}\n                          >\n                            <span>\n                              {item.value}/{item.label}\n                            </span>{' '}\n                            <span aria-hidden=\"true\">&middot;</span>{' '}\n                            <span>{item.label}</span>\n                          </RadioGroup.Description>\n                        </div>\n                      </div>\n                      {checked && (\n                        <div className=\"shrink-0 text-white\">\n                          <CheckIcon className=\"h-6 w-6\" />\n                        </div>\n                      )}\n                    </div>\n                  </>\n                )}\n              </RadioGroup.Option>\n            ))}\n          </div>\n        </RadioGroup>\n      </div>\n    </div>\n  );\n}\n\nfunction CheckIcon(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <circle cx={12} cy={12} r={12} fill=\"#fff\" opacity=\"0.2\" />\n      <path\n        d=\"M7 13l3 3 7-7\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n","import React, { useState } from 'react';\nimport { LayoutCard } from '../layout/card';\n\ninterface SliderProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  initialMinValue?: number;\n  initialMaxValue?: number;\n  onChange: (minValue: number, maxValue: number) => void;\n}\n\nexport const SliderRangeInput: React.FC<SliderProps> = ({\n  min = 0,\n  max = 100,\n  step = 1,\n  initialMinValue = 0,\n  initialMaxValue = 100,\n  onChange,\n}) => {\n  const [minValue, setMinValue] = useState(initialMinValue);\n  const [maxValue, setMaxValue] = useState(initialMaxValue);\n\n  const handleMinChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n    if (newValue <= maxValue) {\n      setMinValue(newValue);\n      onChange(newValue, maxValue);\n    }\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n    if (newValue >= minValue) {\n      setMaxValue(newValue);\n      onChange(minValue, newValue);\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={minValue}\n        onChange={handleMinChange}\n        className=\"w-full h-2 bg-gray-300 rounded-full outline-none appearance-none cursor-pointer transition duration-200 ease-in hover:bg-blue-400 focus:bg-blue-500\"\n        style={{\n          background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${\n            ((minValue - min) / (max - min)) * 100\n          }%, #e5e7eb ${\n            ((minValue - min) / (max - min)) * 100\n          }%, #e5e7eb 100%)`,\n        }}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={maxValue}\n        onChange={handleMaxChange}\n        className=\"w-full h-2 bg-gray-300 rounded-full outline-none appearance-none cursor-pointer transition duration-200 ease-in hover:bg-blue-400 focus:bg-blue-500\"\n        style={{\n          background: `linear-gradient(to right, #e5e7eb 0%, #e5e7eb ${\n            ((maxValue - min) / (max - min)) * 100\n          }%, #3b82f6 ${\n            ((maxValue - min) / (max - min)) * 100\n          }%, #3b82f6 100%)`,\n        }}\n      />\n      <div className=\"text-xs font-semibold text-gray-600 mt-1\">\n        {minValue} - {maxValue}\n      </div>\n    </>\n  );\n};\n","import  React from 'react';\nexport const LayoutCard = (props: any) => {\n  return (\n    <div\n      className={`p-4 pt-2 bg-white shadow m-4 rounded-md  flex-grow ${props?.className}`}\n    >\n      {props.children}\n    </div>\n  );\n};\n","import { Transition } from '@headlessui/react';\nimport  React,{ useState } from 'react';\nimport { Icon, iconType } from '../../assets/icons/list';\n\nexport const CollapseLayout = (props: {\n  title: string;\n  className?: string;\n  children: any;\n  inArray?: boolean;\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const classes = isOpen\n    ? ' w-full shadow  bg-[#00000011] rounded-xl p-[2px] '\n    : ' w-full shadow  bg-[#00000011] p-4 ';\n\n  return (\n    <div className={props.inArray ? '' : `mb-10 mt-2`}>\n      {props.title && (\n        <div\n          onClick={e => setOpen(!isOpen)}\n          className=\"mb-2 flex justify-between items-center cursor-pointer\"\n        >\n          <h3>{props.title}</h3>\n          {isOpen ?\n          <Icon\n            name={iconType.FaChevronRight}\n            aria-hidden=\"true\"\n            className=\"\"\n          />\n          :\n          <Icon\n            name={iconType.FaChevronDown}\n            aria-hidden=\"true\"\n            className=\"\"\n          />\n          }\n        </div>\n      )}\n      <div className={` ${props.className} ${classes}`}>\n        <Transition\n          show={!isOpen}\n          enter=\"transition-opacity duration-75\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"mt-4\">{props.children}</div>\n        </Transition>\n      </div>\n    </div>\n  );\n};\n","import create from 'zustand';\nimport * as objectPath from 'object-path';\nimport { produce } from 'immer';\nimport { validationUtil } from '../utils/validate';\n\nexport interface DataformStoreProps {\n  setStateItem: (item: { [key: string]: any }) => void;\n  timestamp?: number;\n  data?: any;\n  setData: (keyPath: string, value: any) => void;\n  getData: (keyPath: string) => any;\n  refreshList: { [key: string]: number };\n  addArrayItem: (keyPath: string, defaultItem: any) => void;\n  removeArrayItem: (keyPath: string, index: number) => void;\n  notice?: { message: string; type?: 'success' | 'error' | 'warning' | 'info' };\n}\n\nexport const useDataformStore = create<DataformStoreProps>((set, get) => ({\n  data: {},\n  refreshList: {},\n  setStateItem: (item: { [key: string]: any }) =>\n    set((state: any) => ({ ...item })),\n  setData: (keyPath, value) =>\n    set((state: any) => {\n      const data = produce(state.data, (draft: any) => {\n        objectPath.set(draft, keyPath, value);\n      });\n      console.log(data);\n      return { data };\n    }),\n  getData: keyPath => {\n    const { data } = get();\n    return objectPath.get(data, keyPath);\n  },\n  addArrayItem: (keyPath: string, defaultItem: any) =>\n    set(state => {\n      const data = produce(state.data, (draft: any) => {\n        const current = objectPath.get(draft, keyPath);\n        if (current) {\n          current.push(defaultItem);\n        } else {\n          objectPath.set(draft, keyPath, [defaultItem]);\n        }\n      });\n      console.log(keyPath, data);\n      return {\n        data,\n        refreshList: { ...state.refreshList, [keyPath]: Date.now() },\n      };\n\n      // setFormData((prevFormData: any) => {\n      //     const newFormData = { ...prevFormData };\n      //     const keyParts = keyPath.split('.');\n      //     let current = newFormData;\n\n      //     keyParts.forEach((keyPart, index) => {\n      //         if (index === keyParts.length - 1) {\n      //             current[keyPart] = current[keyPart] || [];\n      //             current[keyPart].push('');\n      //         } else {\n      //             if (!current[keyPart]) {\n      //                 current[keyPart] = [];\n      //             }\n      //             current = current[keyPart];\n      //         }\n      //     });\n\n      //     return newFormData;\n      // });\n    }),\n  removeArrayItem: (keyPath: string, index: number) =>\n    set(state => {\n      const data = produce(state.data, (draft: any) => {\n        objectPath.del(draft, keyPath + '.' + index);\n      });\n      // setFormData((prevFormData: any) => {\n      //     const newFormData = { ...prevFormData };\n      //     const keyParts = keyPath.split('.');\n      //     let current = newFormData;\n\n      //     keyParts.forEach((keyPart, idx) => {\n      //         if (idx === keyParts.length - 1) {\n      //             current[keyPart].splice(index, 1);\n      //         } else {\n      //             current = current[keyPart];\n      //         }\n      //     });\n\n      //     return newFormData;\n      // });\n      return {\n        data,\n        refreshList: { ...state.refreshList, [keyPath]: Date.now() },\n      };\n    }),\n  handleValidation: (prop: any, event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!prop.validation) return true;\n\n    const validationResult = prop.validation.every((ruleObj: any) =>\n      validationUtil(ruleObj.rule, event.target.value, ruleObj.value),\n    );\n\n    if (!validationResult) {\n      // Apply error styles or show an error message\n    }\n    return null;\n  },\n}));\n","import { ButtonAdd, ButtonDelete } from '../element/control-button';\nimport { DataformStoreProps, useDataformStore } from '../../context/store';\nimport { renderProperties } from './rederer';\nimport React, { useEffect, useState } from 'react';\nimport { Transition } from '@headlessui/react';\nimport { Icon, iconType } from '../../assets/icons/list';\n\nexport const RenderArray = (props: { prop: any; keyPath: string }) => {\n  const { prop, keyPath } = props;\n\n  const shouldNotUpdate = (\n    prev: DataformStoreProps,\n    next: DataformStoreProps,\n  ): boolean => {\n    if (prev.timestamp !== next.timestamp) return false;\n    if (prev.refreshList[keyPath] !== next.refreshList[keyPath]) return false;\n    return true;\n  };\n\n  const { getData, setData, addArrayItem, removeArrayItem, refreshList } =\n    useDataformStore(state => state, shouldNotUpdate);\n  const [itemStates, setItemState] = useState<any>({});\n  const [arrayItems, setArrayItems] = useState<any>();\n\n  const handleClick = (e: any, _index: number) => {\n    e.preventDefault();\n    setItemState({ ...itemStates, [_index]: !itemStates[_index] });\n  };\n\n  useEffect(() => {\n    setArrayItems(getData(keyPath) || []);\n  }, [refreshList[keyPath]]);\n\n  const inlineDelete =\n    prop.items.type !== 'object' && prop.items.type !== 'array';\n\n  const classes =\n    'flex items-center justify-between text-gray-900 p-4 flex just cursor-pointer w-full rounded-2xl bg-[#00000011]';\n  const getClass = (_index: number) => {\n    if (itemStates[_index]) {\n      return classes + 'cursor-pointer w-full border-b-2 p-4 border-blue-500';\n    }\n    return classes;\n  };\n\n  const propType = prop.items.type;\n  const defaultItem =\n    propType === 'object' ? {} : propType === 'array' ? [] : '';\n\n  let arrayComponent;\n  if (['number', 'string'].includes(propType)) {\n    arrayComponent = arrayItems?.map((item: any, _index: number) => (\n      <div key={_index} className=\"flex items-center  text-slate-500 \">\n        {' '}\n        <span className=\"drag-handle cursor-grab mr-2 \">\n          <Icon color=\"#888\" name={iconType.MdDragIndicator} />\n        </span>\n        {_index + 1}\n        {renderProperties({\n          properties: { [_index]: { ...prop.items, title: '' } },\n          parentKeyPath: `${keyPath}`,\n          index: _index,\n        })}{' '}\n        <div className=\" w-[20px] mr-[30px]\">\n          <ButtonDelete clickHandler={() => removeArrayItem(keyPath, _index)} />\n        </div>\n      </div>\n    ));\n  } else {\n    arrayComponent = arrayItems?.map((item: any, _index: number) => (\n      <div\n        key={_index}\n        className={_index === arrayItems.length - 1 ? '' : 'mb-4  '}\n      >\n        <div className={getClass(_index)}>\n          <div\n            key={_index}\n            onClick={e => handleClick(e, _index)}\n            className=\"flex-grow\"\n          >\n            {prop.title + ' ' + (_index + 1)}\n          </div>\n          <div className=\" w-[20px] mr-[30px]\">\n            <ButtonDelete\n              clickHandler={() => removeArrayItem(keyPath, _index)}\n            />\n          </div>\n        </div>\n        <Transition\n          show={itemStates[_index] || false}\n          enter=\"transition-opacity duration-75\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"mt-4\">\n            <div\n              key={`${keyPath}.${_index}`}\n              className={\n                inlineDelete\n                  ? ' flex justify-between items-center mr-7 d gap-2 '\n                  : ''\n              }\n            >\n              {renderProperties({\n                properties: { [_index]: prop.items },\n                parentKeyPath: `${keyPath}`,\n                index: _index,\n              })}\n            </div>\n          </div>\n        </Transition>\n      </div>\n    ));\n  }\n\n  return (\n    <div key={keyPath} className=\" mb-10\">\n      <h3 className=\"mb-2\">{prop.title}</h3>\n      <div className={`  w-full shadow  bg-[#00000011] rounded-xl p-2`}>\n        {arrayComponent}\n      </div>\n      <div className=\"flex items-center justify-center my-2\">\n        {' '}\n        <ButtonAdd clickHandler={() => addArrayItem(keyPath, defaultItem)} />\n      </div>\n    </div>\n  );\n};\n","import { Icon, iconType } from '../../assets/icons/list';\nimport { useDataformStore } from '../../context/store';\nimport React, { useState } from 'react';\n\nexport const CheckboxInput = (props: {\n  maxItems?: number;\n  minItems?: number;\n  label: string;\n  keyPath: string;\n  options?: {\n    label: string;\n    value: string;\n    description?: string;\n    image?: string;\n  }[];\n}) => {\n  const [checked, setChecked] = useState<string[]>([]);\n  const { setStateItem } = useDataformStore(state => ({\n    setStateItem: state.setStateItem,\n  }));\n\n  const handleClick = (e: any, _value: string) => {\n    if (checked.includes(_value)) {\n      setChecked(checked.filter(value => value !== _value));\n    } else {\n      if (props.maxItems && checked.length >= props.maxItems) {\n        setStateItem({ notice: { message: 'max item reached' } });\n        return;\n      }\n      setChecked([...checked, _value]);\n    }\n  };\n\n  let options = props.options as any;\n  options =\n    (typeof options === 'string'\n      ? options.split(',').map(item => ({ label: item, value: item }))\n      : props.options) || [];\n\n  return (\n    <div>\n      {props.label && (\n        <legend className=\"text-base font-semibold leading-6 text-gray-900\">\n          {props.label}\n        </legend>\n      )}\n      {options.map((option, index) => (\n        <div\n          className=\"relative flex items-start pb-4 pt-3.5 cursor-pointer\"\n          onClick={e => handleClick(e, option.value)}\n        >\n          {option.image && (\n            <img\n              className=\"h-12 w-12 flex-none rounded-full bg-gray-50\"\n              src={option.image}\n              alt=\"\"\n            />\n          )}\n          <div className=\"min-w-0 flex-1 text-sm leading-6\">\n            {option.label && (\n              <label htmlFor=\"candidates\" className=\"font-medium text-gray-900\">\n                {' '}\n                {option.label}{' '}\n              </label>\n            )}\n            {option.description && (\n              <p id=\"candidates-description\" className=\"text-gray-500\">\n                {' '}\n                {option.description}{' '}\n              </p>\n            )}\n          </div>\n          <div className=\"ml-3 flex h-6 items-center\">\n            <input\n              id=\"candidates\"\n              aria-describedby=\"candidates-description\"\n              name=\"candidates\"\n              type=\"checkbox\"\n              className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n              checked={checked.includes(option.value)}\n              onChange={() => { }}\n            />\n          </div>\n        </div>\n      ))}\n\n      <div>\n        <h2 className=\"text-sm font-medium text-gray-500\">Pinned Projects</h2>\n        <ul\n          role=\"list\"\n          className=\"mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4\"\n        >\n          {projects.map(project => (\n            <li\n              key={project.name}\n              className=\"col-span-1 flex rounded-md shadow-sm\"\n            >\n              <div\n                className={classNames(\n                  project.bgColor,\n                  'flex w-16 flex-shrink-0 items-center justify-center rounded-l-md text-sm font-medium text-white',\n                )}\n              >\n                {project.initials}\n              </div>\n              <div className=\"flex flex-1 items-center justify-between truncate rounded-r-md border-b border-r border-t border-gray-200 bg-white\">\n                <div className=\"flex-1 truncate px-4 py-2 text-sm\">\n                  <a\n                    href={project.href}\n                    className=\"font-medium text-gray-900 hover:text-gray-600\"\n                  >\n                    {project.name}\n                  </a>\n                  <p className=\"text-gray-500\">{project.members} Members</p>\n                </div>\n                <div className=\"flex-shrink-0 pr-2\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex h-8 w-8 items-center justify-center rounded-full bg-transparent bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                  >\n                    <span className=\"sr-only\">Open options</span>\n                    <Icon\n                      name={iconType.BiDotsVerticalRounded}\n                      className=\"h-5 w-5\"\n                      aria-hidden=\"true\"\n                    />\n                  </button>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst projects = [\n  {\n    name: 'Graph API',\n    initials: 'GA',\n    href: '#',\n    members: 16,\n    bgColor: 'bg-pink-600',\n  },\n  {\n    name: 'Component Design',\n    initials: 'CD',\n    href: '#',\n    members: 12,\n    bgColor: 'bg-purple-600',\n  },\n  {\n    name: 'Templates',\n    initials: 'T',\n    href: '#',\n    members: 16,\n    bgColor: 'bg-yellow-500',\n  },\n  {\n    name: 'React Components',\n    initials: 'RC',\n    href: '#',\n    members: 8,\n    bgColor: 'bg-green-500',\n  },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\n// export const CheckboxInput = (props: { label: string, keyPath: string }) => {\n//     const [checked, setChecked] = useState(false);\n\n//     const handleClick = (e) => {\n//         setChecked(!checked);\n//         console.log(e)\n//     };\n\n//     return (\n//         <div className=\"flex items-center cursor-pointer\" onClick={handleClick}>\n//             <input\n//                 type=\"checkbox\"\n//                 className=\"hidden\"\n//                 checked={checked}\n//                 onChange={() => { }}\n//             />\n//             {checked ? (\n//                 <AiOutlineCheckSquare className=\"text-xl\" />\n//             ) : (\n//                 <AiOutlineSnippets className=\"text-xl\" />\n//             )}\n//             <label className=\"ml-1\">{props.label}</label>\n//         </div>\n//     );\n// };\n","export const toTitleCase = (str: string) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport const toSentenceCase = (str: string) => {\n  const result = str.replace(/([A-Z])/g, ' $1');\n  return result.charAt(0).toUpperCase() + result.slice(1);\n};\n\nexport const deepCopy = (source: any) => {\n  return JSON.parse(JSON.stringify(source));\n};\n\nexport const isEmpty = (obj: any) => {\n  if (typeof obj === 'function') return false;\n  if (typeof obj === 'boolean' || typeof obj === 'number') return false;\n  if (typeof obj === 'string' && obj.length > 0) return false;\n  if (Array.isArray(obj) && obj.length > 0) return false;\n  if (obj !== null && typeof obj === 'object' && Object.keys(obj).length > 0)\n    return false;\n  return true;\n};\n\nexport const isNotEmpty = (obj: any) => {\n  return !isEmpty(obj);\n};\n\nexport const validUrl = (url: string) => {\n  var pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ); // fragment locator\n  return !!pattern.test(url);\n};\n\nexport function getRandomString(length = 20) {\n  var randomChars =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(\n      Math.floor(Math.random() * randomChars.length),\n    );\n  }\n  return result;\n}\n\nexport function removeEmpty(obj: any): any {\n  return Object.entries(obj)\n    .filter(([_, v]) => v != null)\n    .reduce(\n      (acc, [k, v]) => ({ ...acc, [k]: v === Object(v) ? removeEmpty(v) : v }),\n      {},\n    );\n}\n\nexport function executeFunctionByName(\n  functionName: string,\n  context: any /*, args */,\n) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  var namespaces = functionName.split('.');\n  var func = namespaces.pop();\n  for (var i = 0; i < namespaces.length; i++) {\n    context = context[namespaces[i]];\n  }\n  return context[func].apply(context, args);\n}\n\nexport const getElementByClassName = (className: string) => {\n  return document.querySelector(className) as HTMLElement;\n};\n\nexport const randomNumber = (length: number) => {\n  var arr = [];\n  while (arr.length < length) {\n    var r = Math.floor(Math.random() * 100) + 1;\n    if (arr.indexOf(r) === -1) arr.push(r);\n  }\n  return arr.join();\n};\n\nexport const isArrayString = (str: any) => {\n  if (typeof str !== 'string') return false;\n  return str && str.startsWith('[') && str.endsWith(']');\n};\n\nexport const isObjectString = (str: any) => {\n  if (typeof str !== 'string') return false;\n  return str && str.startsWith('{') && str.endsWith('}');\n};\n\nexport const isJsonString = (str: any) => {\n  return isArrayString(str) || isObjectString(str);\n};\n\nexport const niceURI = (crappyURI: any) => {\n  return crappyURI.replace(/[^a-zA-Z0-9-_]/g, '-');\n};\n\nexport function findNestedKey(obj: any, key: string | number): any {\n  if (obj && typeof obj === 'object') {\n    if (obj.hasOwnProperty(key)) {\n      return obj[key];\n    }\n\n    if (Array.isArray(obj)) {\n      for (let i = 0; i < obj.length; i++) {\n        const result = findNestedKey(obj[i], key);\n        if (result !== undefined) {\n          return result;\n        }\n      }\n    } else {\n      for (let prop in obj) {\n        const result = findNestedKey(obj[prop], key);\n        if (result !== undefined) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  GithubPicker,\n  SketchPicker,\n  ChromePicker,\n  PhotoshopPicker,\n} from 'react-color';\nimport ColorPicker, { useColorPicker } from 'react-best-gradient-color-picker';\n\nexport const CommonColorPicker = (props: {\n  color;\n  updateColor;\n  type;\n  toggle?;\n  useFloatBox?;\n  icon?;\n  className?;\n}) => {\n  const [colorTemp, setColorTemp] = useState('000000');\n  const [gradient, setGradient] = useState('rgba(255, 255, 255, 1)');\n  const [show, setShow] = useState(false);\n  const { valueToHSL, valueToHSV, valueToHex, valueToCmyk, rgbaArr, hslArr } =\n    useColorPicker(gradient, setGradient);\n  const [color, setColor] = useState(props.color || '#000');\n\n  useEffect(() => {\n    setColorTemp(props.color);\n  }, [props.color]);\n\n  const handleChangeComplete = (_color: any) => {\n    const rgb = `rgba(${Object.values(_color.rgb).join(',')})`;\n    if (props.updateColor) props.updateColor(_color);\n    setColor(rgb);\n  };\n\n  const handleGradientChange = (_color: any) => {\n    setGradient(_color);\n    const gColor = { hex: valueToHex(), rgb: rgbaArr };\n    if (_color.includes('gradient')) {\n      gColor['gradient'] = _color;\n    }\n    if (props.updateColor) props.updateColor(gColor);\n  };\n\n  const handleChange = (_color: any) => {\n    const rgb = `rgba(${Object.values(_color.rgb).join(',')})`;\n    setColorTemp(rgb);\n  };\n\n  const getPicker = () => {\n    let selPicker;\n    switch (props.type) {\n      case 'sketch':\n        selPicker = (\n          <SketchPicker\n            className=\"sketch-picker\"\n            onChangeComplete={handleChangeComplete}\n            color={colorTemp || '#000'}\n            onChange={handleChange}\n          />\n        );\n        break;\n      case 'chrome':\n        selPicker = (\n          <ChromePicker\n            className=\"chrome-picker\"\n            onChangeComplete={handleChangeComplete}\n            color={colorTemp || '#000'}\n            onChange={handleChange}\n          />\n        );\n        break;\n      case 'photoshop':\n        selPicker = (\n          <PhotoshopPicker\n            className=\"photoshop-picker\"\n            onChangeComplete={handleChangeComplete}\n            color={colorTemp || '#000'}\n            onChange={handleChange}\n          />\n        );\n        break;\n      case 'gradient':\n        selPicker = (\n          <div className=\"p-2 shadow bg-white border-gray-100 border-2\">\n            <ColorPicker value={gradient} onChange={handleGradientChange} />\n          </div>\n        );\n        break;\n      default:\n        selPicker = (\n          <GithubPicker\n            className=\"github-picker\"\n            onChangeComplete={handleChangeComplete}\n            color={colorTemp || '#000'}\n            onChange={handleChange}\n          />\n        );\n        break;\n    }\n\n    if (props.useFloatBox) {\n      return (\n        <div\n          style={{\n            position: 'absolute',\n            top: '20px',\n            left: '25px',\n            zIndex: 100,\n          }}\n        >\n          {selPicker}\n        </div>\n      );\n    } else {\n      return selPicker;\n    }\n  };\n\n  const toggleButton = () => {\n    return (\n      <div className=\"color-picker-toggle\">\n        <button\n          className={props.className}\n          onClick={e => setShow(!show)}\n          style={{ backgroundColor: colorTemp }}\n        />\n        {show && getPicker()}\n      </div>\n    );\n  };\n  return (\n    <div className=\"color-picker-wrapper\">\n      {props.toggle ? toggleButton() : getPicker()}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' },\n];\n\nexport function SelectInput(props: any) {\n  const [selectedOption, setSelectedOption] = useState<any>(null);\n\n  return (\n    <div className=\"App\">\n      <Select\n        defaultValue={selectedOption}\n        onChange={setSelectedOption}\n        options={props.options}\n        isClearable={true}\n        isMulti={true}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const Label = (props: {\n  id: string;\n  label: string;\n  position: string;\n  isFocused: boolean;\n  className?: string;\n}) => {\n  return (\n    <label\n      htmlFor={props.id}\n      className={` ${\n        props?.className\n      } whitespace-nowrap text-sm transition-all duration-300 ${\n        props.isFocused ? 'text-blue-500' : 'text-gray-500'\n      }`}\n    >\n      {props.label}\n    </label>\n  );\n};\n","import React, { useState } from 'react';\n\ninterface NumberInputProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  initialValue: number | undefined;\n  onChange: (value: number) => void;\n}\n\nexport const NumberInput: React.FC<NumberInputProps> = ({\n  min,\n  max,\n  step,\n  initialValue,\n  onChange,\n}) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n    if (\n      (min === undefined || newValue >= min) &&\n      (max === undefined || newValue <= max)\n    ) {\n      setValue(newValue);\n      onChange(newValue);\n    }\n  };\n\n  const increment = () => {\n    const newValue = value + step;\n    if (max === undefined || newValue <= max) {\n      setValue(newValue);\n      onChange(newValue);\n    }\n  };\n\n  const decrement = () => {\n    const newValue = value - step;\n    if (min === undefined || newValue >= min) {\n      setValue(newValue);\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-between w-full\">\n      <button\n        onClick={decrement}\n        className=\"bg-blue-400 text-white p-2 rounded-l focus:outline-none\"\n      >\n        -\n      </button>\n      <input\n        type=\"number\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={handleChange}\n        className=\"w-full text-center border-t border-b border-blue-400 focus:border-blue-500 focus:outline-none\"\n      />\n      <button\n        onClick={increment}\n        className=\"bg-blue-400 text-white p-2 rounded-r focus:outline-none\"\n      >\n        +\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const Input = (props: any) => {\n  const { onFocus, type, onChange, value, onBlur, label, className } = props;\n\n  const _className = className + ` `;\n  return (\n    <input\n      {...props}\n      onFocus={onFocus}\n      type={type}\n      onChange={onChange}\n      value={value}\n      onBlur={onBlur}\n      className={_className}\n      placeholder={label}\n    />\n  );\n};\n","import { CheckboxInput } from './checkbox';\nimport { Input } from './input';\nimport { RadioInput } from './radio';\nimport { SelectInput } from './select';\nimport { SliderRangeInput } from './slider-range';\n\nexport const basicElementList: { [x: string]: any } = {\n  input: Input,\n  textarea: Input,\n  select: SelectInput,\n  slider: SliderRangeInput,\n  radio: RadioInput,\n  checkbox: CheckboxInput,\n};\n","import React, { useState } from 'react';\nimport { Label } from './label';\nimport { NumberInput } from './number';\nimport { basicElementList } from './basic-element-list';\nimport { DataformStoreProps, useDataformStore } from '../../context/store';\nimport { Icon } from '../../assets/icons/list';\n\nexport const BasicElement = ({\n  keyPath = '',\n  label = '',\n  labelPosition = 'inline',\n  placeholderInside = false,\n  icon = undefined,\n  type = 'string',\n  controlType = 'input',\n  errorMessage = '',\n  className = '',\n  ...props\n}) => {\n  const shouldNotUpdate = (\n    prev: DataformStoreProps,\n    next: DataformStoreProps,\n  ): boolean => {\n    if (prev.timestamp !== next.timestamp) return false;\n    if (prev.refreshList[keyPath] !== next.refreshList[keyPath]) return false;\n    return true;\n  };\n  const { getData, setData } = useDataformStore(\n    state => state,\n    shouldNotUpdate,\n  );\n\n  const [value, setValue] = useState(getData(keyPath));\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onFocus = () => {\n    setIsFocused(true);\n  };\n\n  const onBlur = () => {\n    setIsFocused(false);\n  };\n\n  const onChange = (e: { target: { value: any } }) => {\n    setValue(e.target.value);\n    setData(keyPath, e.target.value);\n  };\n\n  const onChangeNumber = (_value: number) => {\n    setValue(_value);\n    setData(keyPath, _value);\n  };\n\n  const Element: any =\n    basicElementList[controlType] || basicElementList['input'];\n\n  const labelControl = (\n    <Label\n      key={keyPath + '-label'}\n      id={props.keyPath}\n      isFocused={isFocused}\n      label={label}\n      position={labelPosition}\n      className={`${\n        ['left', 'inline'].includes(labelPosition) ? ' w-[200px]' : ''\n      }`}\n    />\n  );\n  return (\n    <div\n      key={keyPath}\n      className={`${className} relative ${\n        labelPosition === 'right' ? ' flex items-center gap-2' : ''\n      }`}\n    >\n      {labelPosition === 'top' && label && labelControl}\n      <div className=\"flex items-center w-full gap-2 \">\n        {labelPosition === 'left' && label && labelControl}\n        {icon && (\n          <div\n            className={` text-gray-500 p-2 transition-all duration-300  rounded bg-[#faf0e1cc] ${\n              isFocused ? 'text-blue-500' : ''\n            }`}\n          >\n            <Icon name={icon} color=\"ff0000\" size={24} />\n          </div>\n        )}\n        {labelPosition === 'inline' && label && labelControl}\n        {type === 'number' && (\n          <NumberInput\n            initialValue={undefined}\n            onChange={onChangeNumber}\n            step={0}\n          />\n        )}\n\n        <Element\n          {...props}\n          onFocus={onFocus}\n          type={type}\n          onChange={onChange}\n          value={value}\n          onBlur={onBlur}\n          className={`block w-full px-4 py-2 mt-1 border bg-[#ffffffcc]  border-gray-400 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-300`}\n          placeholder={label || ''}\n        />\n      </div>\n      {(labelPosition === 'bottom' || labelPosition === 'right') &&\n        label &&\n        labelControl}\n      {errorMessage && (\n        <div className=\"mt-2 text-sm text-red-600\">{errorMessage}</div>\n      )}\n    </div>\n  );\n};\n","import * as iconFa from 'react-icons/fa';\nimport * as iconAi from 'react-icons/ai';\nimport * as iconBs from 'react-icons/bs';\nimport * as iconBi from 'react-icons/bi';\nimport * as iconCi from 'react-icons/ci';\nimport * as iconDi from 'react-icons/di';\nimport * as iconFi from 'react-icons/fi';\nimport * as iconFc from 'react-icons/fc';\nimport * as iconGi from 'react-icons/gi';\nimport * as iconGo from 'react-icons/go';\nimport * as iconGr from 'react-icons/gr';\nimport * as iconHi from 'react-icons/hi';\nimport * as iconHi2 from 'react-icons/hi2';\nimport * as iconIm from 'react-icons/im';\nimport * as iconIo from 'react-icons/io';\nimport * as iconIo5 from 'react-icons/io5';\nimport * as iconMd from 'react-icons/md';\nimport * as iconRx from 'react-icons/rx';\nimport * as iconRi from 'react-icons/ri';\nimport * as iconSi from 'react-icons/si';\nimport * as iconSl from 'react-icons/sl';\nimport * as iconTb from 'react-icons/tb';\nimport * as iconTfi from 'react-icons/tfi';\nimport * as iconTi from 'react-icons/ti';\nimport * as iconVsc from 'react-icons/vsc';\nimport * as iconWi from 'react-icons/wi';\nimport * as iconCg from 'react-icons/cg';\nimport React from 'react';\n\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nexport const emojiMartCustom = [\n  {\n    id: 'fontAwesome',\n    name: 'Font Awesome',\n    emojis: Object.keys(iconFa).map((key: string) => {\n      const Icon = iconFa[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        group: 'fontAwesome',\n        emoticons: [],\n        keywords: ['fontAwesome', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'antDesign',\n    name: 'Ant Design',\n    emojis: Object.keys(iconAi).map((key: string) => {\n      const Icon = iconAi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['Ant', 'Design', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'bootstrap',\n    name: 'Bootstrap',\n    emojis: Object.keys(iconBs).map((key: string) => {\n      const Icon = iconBs[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['Bootstrap', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'boxIcons',\n    name: 'BoxIcons',\n    emojis: Object.keys(iconBi).map((key: string) => {\n      const Icon = iconBi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['BoxIcons', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'circum',\n    name: 'Circum',\n    emojis: Object.keys(iconCi).map((key: string) => {\n      const Icon = iconCi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['Circum', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'devicons',\n    name: 'Devicons',\n    emojis: Object.keys(iconDi).map((key: string) => {\n      const Icon = iconDi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['Devicons', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'feather',\n    name: 'Feather',\n    emojis: Object.keys(iconFi).map((key: string) => {\n      const Icon = iconFi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['feather', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'flatColor',\n    name: 'Flat Color',\n    emojis: Object.keys(iconFc).map((key: string) => {\n      const Icon = iconFc[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['flat color', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'game',\n    name: 'Games',\n    emojis: Object.keys(iconGi).map((key: string) => {\n      const Icon = iconGi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['game', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'github',\n    name: 'Github',\n    emojis: Object.keys(iconGo).map((key: string) => {\n      const Icon = iconGo[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['github', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'grommet',\n    name: 'Grommet',\n    emojis: Object.keys(iconGr).map((key: string) => {\n      const Icon = iconGr[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['grommet', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'heroicons',\n    name: 'Heroicons',\n    emojis: Object.keys(iconHi).map((key: string) => {\n      const Icon = iconHi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['heroicons', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'heroicons2',\n    name: 'Heroicons 2',\n    emojis: Object.keys(iconHi2).map((key: string) => {\n      const Icon = iconHi2[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['heroicons2', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'icoMoon',\n    name: 'IcoMoon',\n    emojis: Object.keys(iconIm).map((key: string) => {\n      const Icon = iconIm[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['icoMoon', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'ionicons',\n    name: 'Ionicons',\n    emojis: Object.keys(iconIo).map((key: string) => {\n      const Icon = iconIo[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['ionicons', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'ionicons5',\n    name: 'Ionicons',\n    emojis: Object.keys(iconIo5).map((key: string) => {\n      const Icon = iconIo5[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['ionicons5', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'materialDesign',\n    name: 'Material Design',\n    emojis: Object.keys(iconMd).map((key: string) => {\n      const Icon = iconMd[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['materialDesign', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'radix',\n    name: 'Radix',\n    emojis: Object.keys(iconRx).map((key: string) => {\n      const Icon = iconRx[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['radix', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'remix',\n    name: 'Remix',\n    emojis: Object.keys(iconRi).map((key: string) => {\n      const Icon = iconRi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['remix', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'simple',\n    name: 'Simple',\n    emojis: Object.keys(iconSi).map((key: string) => {\n      const Icon = iconSi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['simple', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'simpleLine',\n    name: 'Simple Line',\n    emojis: Object.keys(iconSl).map((key: string) => {\n      const Icon = iconSl[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['simpleLine', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'tabler',\n    name: 'Tabler',\n    emojis: Object.keys(iconTb).map((key: string) => {\n      const Icon = iconTb[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['tabler', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'themify',\n    name: 'Themify',\n    emojis: Object.keys(iconTfi).map((key: string) => {\n      const Icon = iconTfi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['themify', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'typicons',\n    name: 'Typicons',\n    emojis: Object.keys(iconTi).map((key: string) => {\n      const Icon = iconTi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['typicons', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'vSCode',\n    name: 'VS Code',\n    emojis: Object.keys(iconVsc).map((key: string) => {\n      const Icon = iconVsc[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['vSCode', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'weather',\n    name: 'Weather',\n    emojis: Object.keys(iconWi).map((key: string) => {\n      const Icon = iconWi[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['weather', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n  {\n    id: 'ccc-gg',\n    name: 'css.gg',\n    emojis: Object.keys(iconCg).map((key: string) => {\n      const Icon = iconCg[key];\n      const svgString = renderToStaticMarkup(<Icon />);\n      const encodedSVG = encodeURIComponent(svgString);\n      const dataURL = `data:image/svg+xml;charset=UTF-8,${encodedSVG}`;\n      return {\n        id: key,\n        name: key,\n        colons: `:${key}:`,\n        emoticons: [],\n        keywords: ['css.gg', key],\n        skins: [\n          {\n            src: dataURL,\n          },\n        ],\n      };\n    }),\n  },\n];\n","import { Popover, Transition } from '@headlessui/react';\nimport { ChevronDownIcon } from '@heroicons/react/20/solid';\nimport React, { Fragment, useState } from 'react';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport { emojiMartCustom } from '../../assets/icons/emoji-mart-custom';\nimport { Icon } from '../../assets/icons/list';\n\nexport function IconPicker() {\n  const [value, setValue] = useState<any>();\n\n  const handleEmojiSelect = (emoji: any) => {\n    if (emoji.src) {\n      setValue(<Icon name={emoji.id} size={20} />);\n    } else {\n      setValue(emoji.native);\n    }\n  };\n\n  return (\n    <div className=\" \">\n      <Popover className=\"relative\">\n        {({ open }) => (\n          <>\n            <Popover.Button\n              className={`   ${\n                open ? '' : 'text-opacity-90'\n              }   group w-full justify-between inline-flex items-center rounded-md px-3 text-base font-medium  hover:text-opacity-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75`}\n            >\n              <span className=\"flex gap-4 items-center\">\n                Pick <span className=\"p-2 shadow-md bg-slate-50\">{value}</span>\n              </span>\n              <ChevronDownIcon\n                className={`${\n                  open ? '' : 'text-opacity-70'\n                }   ml-2 h-5 w-5 text-orange-600 transition duration-150 ease-in-out group-hover:text-opacity-80`}\n                aria-hidden=\"true\"\n              />\n            </Popover.Button>\n            <Transition\n              as={Fragment}\n              enter=\"transition ease-out duration-200\"\n              enterFrom=\"opacity-0 translate-y-1\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leave=\"transition ease-in duration-150\"\n              leaveFrom=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 translate-y-1\"\n            >\n              <Popover.Panel className=\"absolute \">\n                <Picker\n                  data={data}\n                  onEmojiSelect={handleEmojiSelect}\n                  custom={emojiMartCustom}\n                />\n              </Popover.Panel>\n            </Transition>\n          </>\n        )}\n      </Popover>\n    </div>\n  );\n}\n","import React from 'react';\nimport { validationUtil } from '../../utils/validate';\nimport { TabLayout } from '../layout/tab';\nimport { AccordionLayout } from '../layout/accordion';\nimport { SlidesLayout } from '../layout/slides';\nimport { SwitchInput } from '../element/switch';\nimport { RadioInput } from '../element/radio';\nimport { SliderRangeInput } from '../element/slider-range';\nimport { LayoutCard } from '../layout/card';\nimport { CollapseLayout } from '../layout/collapse';\nimport { RenderArray } from './rederer-array';\nimport { CheckboxInput } from '../element/checkbox';\nimport { isEmpty, toTitleCase } from '../utils';\nimport { CommonColorPicker } from '../element/color';\nimport { SelectInput } from '../element/select';\nimport { BasicElement } from '../element/basic-element';\nimport { resolveOptions } from '../utils/resolvers';\nimport { IconPicker } from '../element/icon-picker';\n\nexport const renderProperties = (props: {\n  properties: any;\n  parentKeyPath: string;\n  getData?: any;\n  index?: number;\n}) => {\n  const { properties, parentKeyPath, getData, index } = props;\n  if (!properties) return null;\n\n  const groups: { [group: string]: React.ReactNode[] } = {};\n\n  return Object.entries(properties).map(([key, prop]: [any, any]) => {\n    const keyPath = parentKeyPath ? `${parentKeyPath}.${key}` : key;\n\n    // Add support for conditional renderingå\n    if (getData) {\n      const conditionValue = getData(prop?.condition?.field);\n      if (\n        prop.condition &&\n        !validationUtil(\n          prop.condition.rule,\n          conditionValue,\n          prop.condition.value,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // Add support for different layouts (Tabs, Accordion, Stepper, Collapsible)\n    // ...\n\n    // Other input rendering logic (objects, arrays, etc.) goes here\n\n    const controlType = prop['x-control'];\n    const icon = prop['x-icon'];\n    // const layout = prop['x-layout'] || {};\n    const groupKey = prop['x-group'] || '';\n\n    // const controlWrapperStyle = {\n    //     width: layout.width || 'auto'\n    // };\n\n    if (!groups[groupKey]) {\n      groups[groupKey] = [];\n    }\n\n    // Custom keyword: x-displayIf\n    // if (fieldSchema['x-displayIf']) {\n    //     const displayConfig = fieldSchema['x-displayIf'];\n    //     const compareValue = getValueAtPath(formData, displayConfig.field);\n\n    //     if (displayConfig.condition === 'notEquals' && value === compareValue) {\n    //         return false; // Field should not be displayed\n    //     }\n    // }\n\n    if (prop.layout && prop.layout.type === 'tabs') {\n      return (\n        <div key={keyPath} className=\" mb-10\">\n          <h3 className=\"mb-2\">{prop.title}</h3>\n          <TabLayout\n            key={keyPath}\n            tabs={prop.layout.tabs.map((tab: any) => ({\n              title: tab.title,\n              content: renderProperties({\n                properties: tab.properties,\n                parentKeyPath: keyPath,\n              }),\n            }))}\n          />\n        </div>\n      );\n    }\n\n    if (prop.layout && prop.layout.type === 'accordion') {\n      return (\n        <div key={keyPath} className=\" mb-10\">\n          <h3 className=\"mb-2\">{prop.title}</h3>\n          <AccordionLayout\n            key={keyPath}\n            tabs={prop.layout.tabs.map((tab: any) => ({\n              title: tab.title,\n              content: renderProperties({\n                properties: tab.properties,\n                parentKeyPath: keyPath,\n              }),\n            }))}\n          />\n        </div>\n      );\n    }\n\n    if (prop.layout && prop.layout.type === 'slides') {\n      return (\n        <SlidesLayout\n          key={keyPath}\n          tabs={prop.layout.tabs.map((tab: any) => ({\n            title: tab.title,\n            content: renderProperties({\n              properties: tab.properties,\n              parentKeyPath: keyPath,\n            }),\n          }))}\n        />\n      );\n    }\n\n    if (prop.type === 'object' && prop.properties) {\n      return (\n        <div key={keyPath}>\n          <CollapseLayout title={prop.title} inArray={!isNaN(index)}>\n            {renderProperties({\n              properties: prop.properties,\n              parentKeyPath: keyPath,\n              index,\n            })}\n          </CollapseLayout>\n        </div>\n      );\n    }\n\n    if (prop.type === 'array' && prop.items) {\n      const options = resolveOptions(keyPath, prop);\n      if (isEmpty(options)) {\n        return <RenderArray prop={prop} keyPath={keyPath} />;\n      } else {\n        const { maxItems, minItems } = prop;\n        const title = prop.title || toTitleCase(keyPath.split('.').pop());\n        if (controlType === 'checkbox') {\n          return (\n            <CheckboxInput\n              maxItems={maxItems}\n              label={title}\n              minItems={minItems}\n              keyPath={keyPath}\n              options={options}\n            />\n          );\n        } else {\n          return <SelectInput keyPath={keyPath} options={options} />;\n        }\n      }\n    }\n\n    // const hasError = errors ? errors[keyPath] : null;\n    if (groupKey) {\n      groups[groupKey].push(renderInput(keyPath, prop, getData));\n      return (\n        <LayoutCard key={keyPath}>\n          {Object.values(groups).map((group, index) => (\n            <div key={index} className=\"form-row flex gap-4\">\n              {group}\n            </div>\n          ))}\n        </LayoutCard>\n      );\n    }\n    return (\n      <LayoutCard key={keyPath}>\n        {' '}\n        {renderInput(keyPath, prop, getData)}\n      </LayoutCard>\n    );\n  });\n};\n\nexport const renderInput = (keyPath: string, prop: any, getData?: any) => {\n  let controlType = prop['x-control'];\n  const layout = prop['x-layout'] || {};\n  const labelPosition = prop['x-label-position'] || undefined;\n\n  if (prop['enum'] && !controlType) {\n    controlType = 'select';\n  }\n\n  const title =\n    typeof prop.title === 'undefined'\n      ? toTitleCase(keyPath.split('.').pop())\n      : prop.title;\n\n  const icon = prop['x-icon'];\n\n  if (controlType === 'select') {\n    // Handle cascading dropdowns\n    if (prop['x-enumVar'] && prop['x-enumPath']) {\n      const pathParts = prop['x-enumPath'].split('.');\n      let optionsSource = getData('');\n\n      for (const part of pathParts) {\n        optionsSource = optionsSource?.[part];\n      }\n      const options = prop['x-enumVar'][optionsSource] || [];\n      // return (\n      //     <div key={keyPath}>\n      //         <label htmlFor={keyPath}>{prop.title}</label>\n      //         <select\n      //             id={keyPath}\n      //             value={formData[keyPath] || ''}\n      //             onChange={(event) => handleChange(setFormData, keyPath, event.target.value)}\n      //         >\n      //             <option value=\"\">Select {prop.title}</option>\n      //             {options.map((option) => (\n      //                 <option key={option} value={option}>\n      //                     {option}\n      //                 </option>\n      //             ))}\n      //         </select>\n      //     </div>\n      // );\n    }\n\n    const options = prop['enum']\n      ? prop['enum'].map((item: any) => ({ label: item, value: item }))\n      : [];\n    return <SelectInput options={options} />;\n  }\n\n  if (controlType === 'switch' || prop.type === 'boolean') {\n    return <SwitchInput />;\n  }\n\n  if (controlType === 'icon-picker') {\n    return <IconPicker />;\n  }\n\n  if (controlType === 'checkbox') {\n    return <CheckboxInput label={prop.title} keyPath={keyPath} />;\n  }\n\n  if (controlType === 'color') {\n    return (\n      <CommonColorPicker updateColor={null} color={'#000'} type=\"github\" />\n    );\n  }\n\n  if (controlType === 'slider') {\n    return (\n      <SliderRangeInput\n        min={0}\n        max={10}\n        initialMinValue={2}\n        onChange={e => console.log(e)}\n      />\n    );\n  }\n\n  if (controlType === 'radio') {\n    const options = prop['enum']\n      ? prop['enum'].map((item: any) => ({ label: item, value: item }))\n      : [];\n    return <RadioInput options={options} />;\n  }\n\n  const className = prop['x-group'] ? 'w-full' : '';\n  return (\n    <BasicElement\n      keyPath={keyPath}\n      key={keyPath}\n      label={title}\n      labelPosition={labelPosition}\n      type={prop.type}\n      controlType={controlType}\n      icon={icon}\n      className={className}\n    />\n  );\n};\n","import * as objectPath from 'object-path';\nimport { isEmpty } from '.';\n\nexport const resolveValue = (keyPath: string, schema: any, data: any) => {\n  const props = objectPath.get(schema, keyPath);\n  let value = objectPath.get(data, keyPath);\n  value = getTemplateValue(value, data);\n  if (isEmpty(value)) {\n    value = props['default'];\n  }\n  return value;\n};\n\nexport const resolveOptions = (keyPath: string, schema: any) => {\n  if (schema.enum && typeof schema.enum === 'string') {\n    return schema.enum\n      .split(',')\n      .map((item: string) => ({ label: item, value: item }));\n  }\n  if (\n    schema.enum &&\n    Array.isArray(schema.enum) &&\n    typeof schema.enum[0] === 'string'\n  ) {\n    return schema.enum.map((item: string) => ({ label: item, value: item }));\n  }\n  return schema.enum;\n};\n\nexport const formatValue = (keyPath: string, schema: any, value: any) => {\n  const props = objectPath.get(schema, keyPath);\n  if (props['type'] === 'number' && typeof value === 'string') {\n    return Number(value);\n  }\n  if (props['type'] === 'array' && typeof value === 'string') {\n    return value.split(',');\n  }\n  if (props['type'] === 'array' && typeof value === 'string') {\n    return value.split(',');\n  }\n  if (props['type'] === 'boolean' && typeof value === 'string') {\n    return value === 'true';\n  }\n  return value;\n};\n\nexport const getTemplateValue = (templateKey: string, data: any) => {\n  if (!templateKey || !data) return;\n  let parsedValue;\n\n  if (templateKey.startsWith('{{') && templateKey.endsWith('}}')) {\n    const searchKey = templateKey.replace('{{', '').replace('}}', '');\n    parsedValue = objectPath.get(data, searchKey);\n  } else {\n    parsedValue = templateKey;\n  }\n  return parsedValue;\n};\n","import React,{ Fragment, useEffect, useState } from 'react';\nimport { Transition } from '@headlessui/react';\nimport { CheckCircleIcon } from '@heroicons/react/24/outline';\nimport { XMarkIcon } from '@heroicons/react/20/solid';\nimport { useDataformStore } from '../../context/store';\n\nexport function Notification() {\n  const [show, setShow] = useState(true);\n  const { notice } = useDataformStore(state => ({ notice: state.notice }));\n\n  useEffect(() => {\n    setShow(true);\n    setTimeout(() => {\n      setShow(false);\n    }, 30000);\n  }, [notice]);\n\n  return (\n    <>\n      {/* Global notification live region, render this permanently at the end of the document */}\n      <div\n        aria-live=\"assertive\"\n        className=\"pointer-events-none fixed inset-0 flex items-end px-4 py-6 sm:items-start sm:p-6\"\n      >\n        <div className=\"flex w-full flex-col items-center space-y-4 sm:items-end\">\n          {/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\n          <Transition\n            show={show}\n            as={Fragment}\n            enter=\"transform ease-out duration-300 transition\"\n            enterFrom=\"translate-y-8 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n            enterTo=\"translate-y-5 opacity-100 sm:translate-x-0\"\n            leave=\"transition ease-in duration-100\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg bg-white shadow-lg ring-1 ring-black ring-opacity-5 z-50 \">\n              <div className=\"p-4\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <CheckCircleIcon\n                      className=\"h-6 w-6 text-green-400\"\n                      aria-hidden=\"true\"\n                    />\n                  </div>\n                  <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      Successfully saved!\n                    </p>\n                    <p className=\"mt-1 text-sm text-gray-500\">\n                      Anyone with a link can now view this file.\n                    </p>\n                  </div>\n                  <div className=\"ml-4 flex flex-shrink-0\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                      onClick={() => {\n                        setShow(false);\n                      }}\n                    >\n                      <span className=\"sr-only\">Close</span>\n                      <XMarkIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { renderProperties } from './rederer';\nimport { Notification } from '../common/notification';\nimport { DataformStoreProps, useDataformStore } from '../../context/store';\n\ninterface CustomJsonSchemaFormProps {\n  schema: {\n    title: string;\n    properties: {\n      [key: string]: any;\n    };\n  };\n  onSubmit: (formData: { [key: string]: any }) => void;\n}\n\nexport const CustomJsonSchemaForm: React.FC<CustomJsonSchemaFormProps> = ({\n  schema,\n  onSubmit,\n}) => {\n  const shouldNotUpdate = (\n    prev: DataformStoreProps,\n    next: DataformStoreProps,\n  ): boolean => {\n    if (prev.timestamp !== next.timestamp) return false;\n    return true;\n  };\n  const { getData} =\n    useDataformStore(state => state, shouldNotUpdate);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    onSubmit({});\n  };\n\n  return (\n    <div className=\"w-full h-full\">\n      <form onSubmit={handleSubmit} className=\"pb-[200px]\">\n        {renderProperties({\n          properties: schema.properties,\n          parentKeyPath: '',\n          getData,\n        })}\n        <button type=\"submit\">Submit</button>\n      </form>\n      <Notification />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { CustomJsonSchemaForm } from './components/form';\n\n// Delete me\nexport const Dataform = ( props:any ) => {\n  return <CustomJsonSchemaForm  {...props}/>\n};\n"],"names":["validationUtil","rule","value","comparisonValue","includes","startsWith","endsWith","RegExp","test","Array","isArray","length","TabLayout","props","_useState","useState","activeTab","setActiveTab","classes","React","className","tabs","map","tab","index","key","onClick","e","preventDefault","handleTabClick","_index","title","Transition","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","content","icons","_extends","iconFa","iconAi","iconBs","iconBi","iconCi","iconDi","iconFi","iconFc","iconGi","iconGo","iconGr","iconHi","iconHi2","iconIm","iconIo","iconIo5","iconMd","iconRx","iconRi","iconSi","iconSl","iconTb","iconTfi","iconTi","iconVsc","iconWi","iconCg","iconType","Object","keys","reduce","acc","Icon","name","size","color","Button","clickHandler","id","icon","label","ButtonWithConfirm","confirm","setConfirm","ref","useRef","useClickAway","BiCheck","ButtonAdd","BiPlus","ButtonDelete","MdOutlineDeleteForever","AccordionLayout","itemStates","setItemState","getClass","_extends2","handleClick","deleteHandler","SlidesLayout","Swiper","spaceBetween","slidesPerView","onSlideChange","console","log","onSwiper","swiper","SwiperSlide","SwitchInput","enabled","Switch","checked","onChange","RadioInput","options","RadioGroup","Label","item","Option","_ref","active","_ref2","as","Description","CheckIcon","viewBox","fill","cx","cy","r","opacity","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SliderRangeInput","min","_ref$min","_ref$max","max","_ref$step","step","_ref$initialMinValue","initialMinValue","_ref$initialMaxValue","initialMaxValue","minValue","setMinValue","_useState2","maxValue","setMaxValue","type","event","newValue","parseInt","target","style","background","LayoutCard","children","CollapseLayout","isOpen","setOpen","inArray","FaChevronRight","FaChevronDown","useDataformStore","create","set","get","data","refreshList","setStateItem","state","setData","keyPath","produce","draft","objectPath","getData","_get","addArrayItem","defaultItem","current","push","Date","now","removeArrayItem","_extends3","handleValidation","prop","validation","every","ruleObj","RenderArray","_useDataformStore","prev","next","timestamp","arrayItems","setArrayItems","useEffect","arrayComponent","inlineDelete","items","propType","_properties","MdDragIndicator","renderProperties","properties","parentKeyPath","_properties2","CheckboxInput","setChecked","split","option","_value","filter","maxItems","notice","message","concat","image","src","alt","htmlFor","description","role","projects","project","classNames","bgColor","initials","href","members","BiDotsVerticalRounded","_len","_key","arguments","Boolean","join","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","CommonColorPicker","colorTemp","setColorTemp","gradient","setGradient","_useState3","setShow","_useColorPicker","useColorPicker","valueToHSL","valueToHex","valueToCmyk","rgbaArr","handleChangeComplete","_color","rgb","values","updateColor","setColor","handleGradientChange","gColor","hex","handleChange","getPicker","selPicker","SketchPicker","onChangeComplete","ChromePicker","PhotoshopPicker","ColorPicker","GithubPicker","useFloatBox","position","top","left","zIndex","toggle","backgroundColor","SelectInput","Select","defaultValue","isClearable","isMulti","isFocused","NumberInput","initialValue","setValue","undefined","Input","onFocus","onBlur","placeholder","basicElementList","input","textarea","select","slider","radio","checkbox","BasicElement","_ref$keyPath","_ref$label","_ref$labelPosition","labelPosition","_ref$placeholderInsid","_ref$icon","_ref$type","_ref$controlType","controlType","_ref$errorMessage","errorMessage","_ref$className","_objectWithoutPropertiesLoose","_excluded","setIsFocused","Element","labelControl","emojiMartCustom","emojis","svgString","renderToStaticMarkup","colons","group","emoticons","keywords","skins","encodeURIComponent","IconPicker","handleEmojiSelect","emoji","Popover","open","ChevronDownIcon","Fragment","Panel","Picker","onEmojiSelect","custom","groups","entries","_prop$condition","conditionValue","condition","field","obj","schema","groupKey","layout","isNaN","minItems","pop","renderInput","_step","pathParts","optionsSource","_iterator","_createForOfIteratorHelperLoose","done","_optionsSource","Notification","setTimeout","CheckCircleIcon","XMarkIcon","CustomJsonSchemaForm","onSubmit"],"mappings":"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"}